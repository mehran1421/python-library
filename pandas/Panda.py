import pandas as pd

lables=['a','b','c']
my_data=[10,20,30]
d={'a':10,'b':20,'c':30}
#Series
print(pd.Series(data=my_data))
# 0    10
# 1    20
# 2    30
# dtype: int64
print(pd.Series(data=my_data,index=lables))
# a    10
# b    20
# c    30
# dtype: int64
print(pd.Series(data=d))
# a    10
# b    20
# c    30
# dtype: int64
example=pd.Series([1,2,3],['IRAN','USA','GERMANY'])
print(example)
# IRAN       1
# USA        2
# GERMANY    3
# dtype: int64
print(example["IRAN"])
# 1
example2=pd.Series([10,2,30],['IRAN','japon','GERMANY'])
print(example2)
# IRAN       10
# japon       2
# GERMANY    30
# dtype: int64
print(example+example2)
# GERMANY    33.0
# IRAN       11.0
# USA         NaN
# japon       NaN
# dtype: float64
print("===========================================================")
from numpy.random import randn
import numpy as np
np.random.seed(101)
df=pd.DataFrame(randn(5,4),['a','b','c','d','e'],['w','x','y','z'])
print(df)
#           w         x         y         z
# a  2.706850  0.628133  0.907969  0.503826
# b  0.651118 -0.319318 -0.848077  0.605965
# c -2.018168  0.740122  0.528813 -0.589001
# d  0.188695 -0.758872 -0.933237  0.955057
# e  0.190794  1.978757  2.605967  0.683509

print(df['w'])
# a    2.706850
# b    0.651118
# c   -2.018168
# d    0.188695
# e    0.190794
# Name: w, dtype: float64
print(df.w)
# a    2.706850
# b    0.651118
# c   -2.018168
# d    0.188695
# e    0.190794
# Name: w, dtype: float64
print(df[['x','z']])
#           x         z
# a  0.628133  0.503826
# b -0.319318  0.605965
# c  0.740122 -0.589001
# d -0.758872  0.955057
# e  1.978757  0.683509
df['new']=df['w']+df['y']
print(df)
#           w         x         y         z       new
# a  2.706850  0.628133  0.907969  0.503826  3.614819
# b  0.651118 -0.319318 -0.848077  0.605965 -0.196959
# c -2.018168  0.740122  0.528813 -0.589001 -1.489355
# d  0.188695 -0.758872 -0.933237  0.955057 -0.744542
# e  0.190794  1.978757  2.605967  0.683509  2.796762
print(df.drop('new',axis=1))
#           w         x         y         z
# a  2.706850  0.628133  0.907969  0.503826
# b  0.651118 -0.319318 -0.848077  0.605965
# c -2.018168  0.740122  0.528813 -0.589001
# d  0.188695 -0.758872 -0.933237  0.955057
# e  0.190794  1.978757  2.605967  0.683509
print(df)
#           w         x         y         z       new
# a  2.706850  0.628133  0.907969  0.503826  3.614819
# b  0.651118 -0.319318 -0.848077  0.605965 -0.196959
# c -2.018168  0.740122  0.528813 -0.589001 -1.489355
# d  0.188695 -0.758872 -0.933237  0.955057 -0.744542
# e  0.190794  1.978757  2.605967  0.683509  2.796762
df.drop('new',axis=1,inplace=True)
print(df)
#           w         x         y         z
# a  2.706850  0.628133  0.907969  0.503826
# b  0.651118 -0.319318 -0.848077  0.605965
# c -2.018168  0.740122  0.528813 -0.589001
# d  0.188695 -0.758872 -0.933237  0.955057
# e  0.190794  1.978757  2.605967  0.683509
print(df.drop('e',axis=0))
#           w         x         y         z
# a  2.706850  0.628133  0.907969  0.503826
# b  0.651118 -0.319318 -0.848077  0.605965
# c -2.018168  0.740122  0.528813 -0.589001
# d  0.188695 -0.758872 -0.933237  0.955057
print(df.shape)
# (5, 4)
print("=================================================")
print(df.loc['a'])
# w    2.706850
# x    0.628133
# y    0.907969
# z    0.503826
# Name: a, dtype: float64
print(df.iloc[0])
# w    2.706850
# x    0.628133
# y    0.907969
# z    0.503826
# Name: a, dtype: float64
print(df.loc['b','y'])
# -0.8480769834036315
print("------------------------------------------")
print(df>0)
#       w      x      y      z
# a   True   True   True   True
# b   True  False  False   True
# c  False   True   True  False
# d   True  False  False   True
# e   True   True   True   True
print(df[df>0])
#           w         x         y         z
# a  2.706850  0.628133  0.907969  0.503826
# b  0.651118       NaN       NaN  0.605965
# c       NaN  0.740122  0.528813       NaN
# d  0.188695       NaN       NaN  0.955057
# e  0.190794  1.978757  2.605967  0.683509
print(df[df['w']>0])
#           w         x         y         z
# a  2.706850  0.628133  0.907969  0.503826
# b  0.651118 -0.319318 -0.848077  0.605965
# d  0.188695 -0.758872 -0.933237  0.955057
# e  0.190794  1.978757  2.605967  0.683509
print(df[df['w']>0][['y','x']])
#           y         x
# a  0.907969  0.628133
# b -0.848077 -0.319318
# d -0.933237 -0.758872
# e  2.605967  1.978757
print("=============================================")
print(df[(df['w']>0) & (df['y']>1)])
#           w         x         y         z
# e  0.190794  1.978757  2.605967  0.683509
print(df[(df['w']>0) | (df['y']>1)])
#           w         x         y         z
# a  2.706850  0.628133  0.907969  0.503826
# b  0.651118 -0.319318 -0.848077  0.605965
# d  0.188695 -0.758872 -0.933237  0.955057
# e  0.190794  1.978757  2.605967  0.683509
print(df.reset_index())
#   index         w         x         y         z
# 0     a  2.706850  0.628133  0.907969  0.503826
# 1     b  0.651118 -0.319318 -0.848077  0.605965
# 2     c -2.018168  0.740122  0.528813 -0.589001
# 3     d  0.188695 -0.758872 -0.933237  0.955057
# 4     e  0.190794  1.978757  2.605967  0.683509
newind='ca ny wy or co'.split()
df['states']=newind
print(df)
#     w         x         y         z states
# a  2.706850  0.628133  0.907969  0.503826     ca
# b  0.651118 -0.319318 -0.848077  0.605965     ny
# c -2.018168  0.740122  0.528813 -0.589001     wy
# d  0.188695 -0.758872 -0.933237  0.955057     or
# e  0.190794  1.978757  2.605967  0.683509     co
print(df.set_index('states'))
#                w         x         y         z
# states
# ca      2.706850  0.628133  0.907969  0.503826
# ny      0.651118 -0.319318 -0.848077  0.605965
# wy     -2.018168  0.740122  0.528813 -0.589001
# or      0.188695 -0.758872 -0.933237  0.955057
# co      0.190794  1.978757  2.605967  0.683509
print("======================================================")
outside=['g1','g1','g1','g2','g2','g2']
inside=[1,2,3,1,2,3]
hier_index=list(zip(outside,inside))
print(hier_index)
# [('g1', 1), ('g1', 2), ('g1', 3), ('g2', 1), ('g2', 2), ('g2', 3)]
hier_index=pd.MultiIndex.from_tuples(hier_index)
print(hier_index)
# MultiIndex([('g1', 1),
#             ('g1', 2),
#             ('g1', 3),
#             ('g2', 1),
#             ('g2', 2),
#             ('g2', 3)],
#            )
df=pd.DataFrame(randn(6,2),hier_index,['a','b'])
print(df)
#              a         b
# g1 1  0.302665  1.693723
#    2 -1.706086 -1.159119
#    3 -0.134841  0.390528
# g2 1  0.166905  0.184502
#    2  0.807706  0.072960
#    3  0.638787  0.329646
print(df.loc['g1'])
#          a         b
# 1  0.302665  1.693723
# 2 -1.706086 -1.159119
# 3 -0.134841  0.390528
print(df.loc['g1'].loc[1])
# a    0.302665
# b    1.693723
# Name: 1, dtype: float64
df.index.names=['groups','num']
print(df)
#                    a         b
# groups num
# g1     1    0.302665  1.693723
#        2   -1.706086 -1.159119
#        3   -0.134841  0.390528
# g2     1    0.166905  0.184502
#        2    0.807706  0.072960
#        3    0.638787  0.329646


print("-------------------------------------")
#pip install xlrd
print(pd.read_excel('s.xlsx'))

df.to_excel('s.xlsx',sheet_name='NewSheet')

